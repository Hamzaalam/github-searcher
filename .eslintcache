[{"/home/hamza/Development/react/github-searcher/src/reportWebVitals.ts":"1","/home/hamza/Development/react/github-searcher/src/components/DropDown/indetx.tsx":"2","/home/hamza/Development/react/github-searcher/src/components/TextField.tsx":"3","/home/hamza/Development/react/github-searcher/src/index.tsx":"4","/home/hamza/Development/react/github-searcher/src/App.tsx":"5","/home/hamza/Development/react/github-searcher/src/pages/searchPage.tsx":"6","/home/hamza/Development/react/github-searcher/src/components/FlexBox.tsx":"7","/home/hamza/Development/react/github-searcher/src/utils/customSearch.ts":"8","/home/hamza/Development/react/github-searcher/src/components/SearchHeader.tsx":"9","/home/hamza/Development/react/github-searcher/src/components/DropDown/options.ts":"10"},{"size":425,"mtime":1611459284942,"results":"11","hashOfConfig":"12"},{"size":893,"mtime":1611459284942,"results":"13","hashOfConfig":"12"},{"size":607,"mtime":1611459617944,"results":"14","hashOfConfig":"12"},{"size":500,"mtime":1611459284942,"results":"15","hashOfConfig":"12"},{"size":345,"mtime":1611460223907,"results":"16","hashOfConfig":"12"},{"size":2991,"mtime":1611460279162,"results":"17","hashOfConfig":"12"},{"size":991,"mtime":1611459284942,"results":"18","hashOfConfig":"12"},{"size":264,"mtime":1611459284942,"results":"19","hashOfConfig":"12"},{"size":1011,"mtime":1611459535895,"results":"20","hashOfConfig":"12"},{"size":158,"mtime":1611459284942,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"aj4v6k",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hamza/Development/react/github-searcher/src/reportWebVitals.ts",[],["44","45"],"/home/hamza/Development/react/github-searcher/src/components/DropDown/indetx.tsx",[],"/home/hamza/Development/react/github-searcher/src/components/TextField.tsx",[],"/home/hamza/Development/react/github-searcher/src/index.tsx",[],"/home/hamza/Development/react/github-searcher/src/App.tsx",[],"/home/hamza/Development/react/github-searcher/src/pages/searchPage.tsx",["46"],"import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport TextComponent from '../components/TextField';\nimport DropDown from '../components/DropDown/indetx';\nimport { Box, Flex } from '../components/FlexBox';\nimport styled from 'styled-components';\nimport { customSearch } from '../utils/customSearch';\nimport SearchHeader from '../components/SearchHeader';\nimport { debounce } from 'lodash';\n\nconst Wrapper = styled(Flex)`\nwidth:1000px;\n`;\n\nconst StyledImage = styled.img`\n    width:300px;\n    height:150px;\n`;\nconst Tile = styled.a`\n    width:300px;\n    height:150px;\n    background:#c4c4c4;\n    margin:20px 10px 0px 0px;\n    &:hover ${StyledImage} {\n        border: 1px solid grey;\n      }\n`;\n\nexport interface SearchPageProps { }\n\nconst SearchPage: React.SFC<SearchPageProps> = () => {\n    const [selectedOption, setSelectedoption] = useState<string>('users');\n    const [keyWord, setKeyWord] = useState<string>('');\n    const [data, setData] = useState<any>([]);\n\n    useEffect(() => {\n        if (!keyWord) {\n            setData([]);\n        }\n    }, [keyWord])\n    const handleSearch = async (value: string) => {\n        setKeyWord(value);\n        if (value.length > 2) {\n            try {\n                const result = await customSearch(value, selectedOption);\n                setData(result.items);\n            }\n            catch (err) {\n                alert(err.message);\n            }\n        }\n    }\n    const handleDropDown = async (newOption: string) => {\n        setSelectedoption(newOption);\n        if (keyWord.length > 2) {\n            try {\n                const result = await customSearch(keyWord, newOption);\n                setData(result.items);\n            }\n            catch (err) {\n                alert(err.message);\n            }\n        }\n    }\n    return (<Wrapper\n        flexWrap=\"wrap\"\n        flexDirection=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        gridArea=\"main\"\n    >\n        <Flex flexWrap=\"wrap\"\n            justifyContent={'left'}\n            flexDirection={data.length ? 'row' : 'column'}\n            style={{ margin: '20px 10px 0px 35px' }}\n        >\n            <Flex justifyContent=\"center\">\n                <SearchHeader />\n            </Flex>\n            <Flex justifyContent=\"center\" marginTop={10}>\n                <TextComponent onInput={debounce((val: string) => handleSearch(val), 1000)} />\n                <DropDown selectedOption={selectedOption} onDropDownChange={handleDropDown} />\n            </Flex>\n\n        </Flex>\n        <Flex\n            flexWrap=\"wrap\"\n            flexDirection=\"row\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            gridArea=\"main\"\n        >\n            {data.map((d: any) =>\n                <Tile key={d.avatar_url} href={d.html_url} target=\"_blank\">\n                    <StyledImage src={d.avatar_url} />\n                </Tile>\n            )}\n        </Flex>\n\n    </Wrapper >\n    );\n}\n\nexport default SearchPage;","/home/hamza/Development/react/github-searcher/src/components/FlexBox.tsx",[],"/home/hamza/Development/react/github-searcher/src/utils/customSearch.ts",[],"/home/hamza/Development/react/github-searcher/src/components/SearchHeader.tsx",[],"/home/hamza/Development/react/github-searcher/src/components/DropDown/options.ts",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":5,"column":10,"nodeType":"53","messageId":"54","endLine":5,"endColumn":13},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]