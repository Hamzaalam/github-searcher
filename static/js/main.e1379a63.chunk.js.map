{"version":3,"sources":["components/TextField.tsx","components/DropDown/options.ts","components/DropDown/indetx.tsx","components/FlexBox.tsx","utils/customSearch.ts","components/SearchHeader.tsx","pages/searchPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledInput","styled","input","TextComponent","onInput","onChange","e","target","value","placeholder","options","id","name","StyledSelect","select","StyledOption","option","DropDown","selectedOption","onDropDownChange","map","o","StyledFlex","div","layout","flexbox","position","color","space","Flex","border","forwardRef","props","ref","customSearch","keyWord","type","a","searchQueryURL","fetch","response","json","result","StyledAvatar","img","TopText","h2","BottomText","p","SearchHeader","width","justifyContent","alignItems","src","flexDirection","marginLeft","Wrapper","StyledImage","Tile","SearchPage","useState","setSelectedoption","setKeyWord","data","setData","useEffect","handleSearch","length","items","alert","message","handleDropDown","newOption","flexWrap","gridArea","style","margin","marginTop","debounce","val","d","href","html_url","avatar_url","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1379a63.chunk.js","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n    height: 65px;\n    width: 350px;\n    font-size: larger;\n    border: 1px solid #ccc;\n    border-radius: 0px;\n    box-sizing: border-box;\n    padding: 12px 20px;\n    display: inline-block;\n`;\n\nexport interface TextComponentProps {\n    onInput: (arg: string) => void;\n}\nconst TextComponent: React.SFC<TextComponentProps> = ({ onInput }) => {\n    return (<StyledInput onChange={(e) => { onInput(e.target.value) }}\n        placeholder={'Start Typing to Search ..'} />);\n}\n\nexport default TextComponent;","export const options = [\n    {\n        id: '1', name: 'Users', value: 'users'\n    },\n    {\n        id: '2', name: 'Repositories', value: 'repositories'\n    }]","import * as React from 'react';\nimport styled from \"styled-components\";\nimport { options } from './options'\nconst StyledSelect = styled.select`\n    font-size: larger;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n    padding: 12px 20px;\n    display: inline-block;\n    color: grey;\n    background: none;\n    margin-left: 20px;\n    height: 65px;\n`;\nconst StyledOption = styled.option`\n    font-size: larger;\n`;\n\nexport interface DropDownProps {\n    selectedOption: string;\n    onDropDownChange: (arg: string) => void;\n}\nconst DropDown: React.SFC<DropDownProps> = ({ selectedOption, onDropDownChange }) => {\n    return (<StyledSelect value={selectedOption} onChange={(e) => { onDropDownChange(e.target.value) }}>\n        {options.map(o =>\n            <StyledOption key={o.id} value={o.value}> {o.name}</StyledOption>\n        )\n        }\n    </StyledSelect>);\n}\n\nexport default DropDown;","import styled from 'styled-components';\nimport * as React from 'react';\nimport { forwardRef, Ref } from 'react';\nimport {\n  color, ColorProps, space, SpaceProps, layout, LayoutProps, flexbox, FlexProps, position, PositionProps, border, BorderProps\n} from 'styled-system';\n\ntype Props = LayoutProps & FlexProps & ColorProps & SpaceProps & PositionProps;\ntype BoxProps = ColorProps & SpaceProps & LayoutProps & PositionProps & BorderProps;\n\nexport const StyledFlex = styled.div<Props>`\n  boxsizing: 'border-box';\n  minwidth: 0;\n  display: flex;\n  ${layout};\n  ${flexbox};\n  ${position};\n  ${color};\n  ${space};\n`;\nconst StyledBox = styled.div<BoxProps>`\n  box-sizing: border-box;\n  min-width: 0;\n  ${space};\n  ${color};\n  ${layout};\n  ${position};\n  ${border};\n`;\n\nconst Flex = forwardRef((props: any, ref: Ref<HTMLDivElement>) => <StyledFlex ref={ref} {...props} />);\nconst Box = forwardRef((props: any, ref: Ref<HTMLDivElement>) => <StyledBox ref={ref} {...props} />);\n\nexport { Flex, Box };","export const customSearch = async (keyWord: string, type: string) => {\n    const searchQueryURL = `https://api.github.com/search/${type}?q=${keyWord}`;\n    const response = await fetch(searchQueryURL);\n    const result = await response.json();\n    return result;\n}","import * as React from 'react';\nimport styled from 'styled-components';\nimport { Flex } from './FlexBox';\nconst avatarURL = `https://camo.githubusercontent.com/f5f5fa1c2753be299a410838a5140a701cc66fb4adc13c0b9a3d45936d2bf0d8/68747470733a2f2f696d6167652e666c617469636f6e2e636f6d2f69636f6e732f706e672f3531322f32352f32353233312e706e67`;\n\nconst StyledAvatar = styled.img`\n    width:60px;\n`;\nconst TopText = styled.h2`\n    margin:0px;\n`;\nconst BottomText = styled.p`\n    margin: 4px 0px;\n    color: grey;\n`;\n\nexport interface SearchHeaderProps { }\nconst SearchHeader: React.SFC<SearchHeaderProps> = () => {\n    return (\n        <Flex width=\"540px\" justifyContent=\"right\" alignItems={'center'}>\n            <StyledAvatar src={avatarURL} />\n            <Flex flexDirection='column' alignItems=\"end\" marginLeft=\"15px\">\n                <TopText>Github Searcher</TopText>\n                <BottomText>Search users or repositries below</BottomText>\n            </Flex>\n        </Flex>\n    );\n}\n\nexport default SearchHeader;","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport TextComponent from '../components/TextField';\nimport DropDown from '../components/DropDown/indetx';\nimport { Box, Flex } from '../components/FlexBox';\nimport styled from 'styled-components';\nimport { customSearch } from '../utils/customSearch';\nimport SearchHeader from '../components/SearchHeader';\nimport { debounce } from 'lodash';\n\nconst Wrapper = styled(Flex)`\nwidth:1000px;\n`;\n\nconst StyledImage = styled.img`\n    width:300px;\n    height:150px;\n`;\nconst Tile = styled.a`\n    width:300px;\n    height:150px;\n    background:#c4c4c4;\n    margin:20px 10px 0px 0px;\n    &:hover ${StyledImage} {\n        border: 1px solid grey;\n      }\n`;\n\nexport interface SearchPageProps { }\n\nconst SearchPage: React.SFC<SearchPageProps> = () => {\n    const [selectedOption, setSelectedoption] = useState<string>('users');\n    const [keyWord, setKeyWord] = useState<string>('');\n    const [data, setData] = useState<any>([]);\n\n    useEffect(() => {\n        if (!keyWord) {\n            setData([]);\n        }\n    }, [keyWord])\n    const handleSearch = async (value: string) => {\n        setKeyWord(value);\n        if (value.length > 2) {\n            try {\n                const result = await customSearch(value, selectedOption);\n                setData(result.items);\n            }\n            catch (err) {\n                alert(err.message);\n            }\n        }\n    }\n    const handleDropDown = async (newOption: string) => {\n        setSelectedoption(newOption);\n        if (keyWord.length > 2) {\n            try {\n                const result = await customSearch(keyWord, newOption);\n                setData(result.items);\n            }\n            catch (err) {\n                alert(err.message);\n            }\n        }\n    }\n    return (<Wrapper\n        flexWrap=\"wrap\"\n        flexDirection=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        gridArea=\"main\"\n    >\n        <Flex flexWrap=\"wrap\"\n            justifyContent={'left'}\n            flexDirection={data.length ? 'row' : 'column'}\n            style={{ margin: '20px 10px 0px 35px' }}\n        >\n            <Flex justifyContent=\"center\">\n                <SearchHeader />\n            </Flex>\n            <Flex justifyContent=\"center\" marginTop={10}>\n                <TextComponent onInput={debounce((val: string) => handleSearch(val), 1000)} />\n                <DropDown selectedOption={selectedOption} onDropDownChange={handleDropDown} />\n            </Flex>\n\n        </Flex>\n        <Flex\n            flexWrap=\"wrap\"\n            flexDirection=\"row\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            gridArea=\"main\"\n        >\n            {data.map((d: any) =>\n                <Tile key={d.avatar_url} href={d.html_url} target=\"_blank\">\n                    <StyledImage src={d.avatar_url} />\n                </Tile>\n            )}\n        </Flex>\n\n    </Wrapper >\n    );\n}\n\nexport default SearchPage;","import React from 'react';\nimport SearchPage from './pages/searchPage';\nimport styled from 'styled-components';\nimport { Flex } from \"../src/components/FlexBox\";\n\nconst Wrapper = styled(Flex)`\n  justify-content:center;\n  height:99vh;\n`;\n\nfunction App() {\n  return (\n    <Wrapper >\n      <SearchPage />\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}